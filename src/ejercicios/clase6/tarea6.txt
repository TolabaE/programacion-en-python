Ejercicio POO con encapsulamiento y uso del decorador Property
Crear una clase llamada Password con las siguientes condiciones:
• Dos atributo de clase privados:
o LONGITUD. Cuyo valor sea 8 (numérico).
o CARACTERES_VALIDOS. Cuyo valor sea
"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ<=>
@#%&+" (string)

• Dos atributos de instancia privados:
o longitud. Por defecto, será igual al valor del atributo de clase LONGITUD. Y su valor
no podrá ser inferior a 6 caracteres ni mayor a 15 caracteres.
o contraseña. Su valor aleatorio deberá ser asignado en el método
generarPassword().

• Un método inicializador de instancias, con el parámetro longitud cuyo valor se asignará al
atributo de instancia. Generará una contraseña aleatoria con esa longitud invocando al
método generarPassword().
• Los atributos de instancia deben estar encapsulados (usar el decorador property).
• Dos métodos de instancia públicos, cuya implementación deberá ser:
o esFuerte(): devuelve un booleano si es fuerte o no. Para que sea fuerte debe tener
más de 1 mayúscula, 1 carácter especial, más de 1 minúscula y más de 1 números.
o generarPassword(): genera la contraseña del objeto cuyo valor de tipo string
tendrá una longitud igual al valor del atributo de instancia “longitud”. Para la
generación de la clave puede usar los métodos random.choice() y string.join() de
Python.

• Incluir además, los métodos públicos que permiten obtener y asignar valores (getters y
setters) a los atributos de instancia. Los mismos deben estar decorados con el decorador
@property.
• Sobreescribir el método de instancia __str__(), para que retorne la clave generada y el
valor booleano que devuelve el método “es_fuerte()”.


Luego, crear una función main() que permita:
• Crear una lista de Passwords.
• Crear instancias de Password y agregarlas a la lista. Para cada objeto ingresar la longitud
de la clave por teclado. Si el valor ingresado es cero, no se pasará ningún valor como
argumento al método inicializador.
• Mostrar cada una de las contraseñas creadas y si es o no fuerte (usar un bucle). Para ello,
usar este simple formato:
contraseña1 - valor_booleano1
contraseña2 - valor_bololeano2